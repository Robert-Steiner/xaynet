name: Rust-CI

on:
  push:

jobs:
  lint:
    name: cargo-fmt
    timeout-minutes: 20
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cargo_manifest: [./rust, ./bindings/python]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        id: rust-toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
          # we need to set the nightly toolchain as default so that `rust-toolchain.outputs.rustc`
          # prints the installed nightly version rather than the installed version of stable
          default: true

      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.rustc }}-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo target build
        uses: actions/cache@v2
        with:
          path: |
            ${{ matrix.cargo_manifest }}/target
          key: ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.rustc }}-fmt-${{ hashFiles('**/Cargo.lock') }}

      - name: cargo fmt
        working-directory: ${{ matrix.cargo_manifest }}
        run: cargo +nightly fmt --all -- --check
